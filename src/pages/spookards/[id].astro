---
import IconShare from "@/components/icons/iconShare.astro";
import Layout from "@/layouts/Layout.astro";
import { CldImage } from "astro-cloudinary";
---

<Layout title="Spookards">
  <main class="breackout space-y-8">
    <div id="photo-container" class="mt-8 place-content-center">
      <div
        id="loading"
        class="relative flex h-full min-h-[453px] w-full items-center justify-center rounded-lg shadow-lg transition"
      >
        <div class="absolute z-0 rounded-lg bg-black">
          <CldImage
            id="photo-original-big"
            src=""
            alt=""
            class={`photo-original flex h-full w-full rounded-lg opacity-0 z-0 transition shadow-lg`}
          />
        </div>

        <h4
          class="absolute z-10 animate-pulse text-center font-marker2 text-2xl text-red-600 shadow-lg"
        >
          Generando tu postcard. Por favor espera...
        </h4>
      </div>
      <CldImage
        id="photo-image"
        src=""
        alt=""
        class={`flex h-full w-full rounded-lg opacity-0 transition shadow-lg`}
      />
    </div>

    <div class="mt-8 flex items-center justify-center gap-x-4 text-center">
      <h4 class="font-marker2 text-xl text-red-800">Foto original</h4>
      <div class="aspect-video w-52">
        <CldImage
          id="photo-original"
          src=""
          alt=""
          class={`photo-original flex h-full w-full rounded-lg opacity-0 transition shadow-lg`}
        />
      </div>
    </div>

    <div
      class="flex flex-col space-y-4 rounded-lg border border-black/50 bg-black/30 px-6 py-6 text-center shadow-lg"
    >
      <h4 class="font-marker2 text-xl text-red-800">
        Compartí esta imagen con tus amigos
      </h4>
      <div class="flex items-center justify-center gap-x-4">
        <button
          id="download-btn"
          class="flex items-center gap-x-2 rounded-lg bg-red-500 px-3 py-2 text-white"
          >Descargar postcard <IconShare /></button
        >
      </div>
    </div>

    <div
      class="mt-8 rounded-lg border border-black/50 bg-black/80 px-6 py-6 text-center shadow-lg"
    >
      <h4 class="font-marker2 text-3xl text-red-800">
        Tus últimos postcards generados
      </h4>
      <div
        id="latests-cards"
        class="mt-8 grid grid-cols-1 gap-4 md:grid-cols-2"
      >
      </div>
    </div>
  </main>
</Layout>

<script>
  import { getCldOgImageUrl } from "astro-cloudinary/helpers";
  const photo = document.querySelector("#photo-image") as HTMLImageElement;
  const loading = document.querySelector("#loading") as HTMLElement;
  const photoOriginal = document.querySelector(
    "#photo-original"
  ) as HTMLImageElement;
  const photoOriginalBig = document.querySelector(
    "#photo-original-big"
  ) as HTMLImageElement;
  const downloadBtn = document.getElementById("download-btn") as HTMLElement;
  const latestsCards = document.getElementById("latests-cards") as HTMLElement;

  // Get the array of quotes from local storage
  const quotes = JSON.parse(localStorage.getItem("quotes") || "[]");

  // Get the last quote
  const quoteJson = quotes.length > 0 ? quotes[quotes.length - 1] : null;

  let postcardUrl = "";

  console.log(quoteJson);

  function createPostcard() {
    const url = getCldOgImageUrl({
      src: quoteJson.publicId,
      replaceBackground: `a terrifying halloween background from the horror movie ${quoteJson.movie_en}`,
      replace: {
        to: `transform into a monster or creature from the movie ${quoteJson.movie_en}`,
        from: "people",
        preserveGeometry: true,
      },
      overlays: [
        {
          publicId: quoteJson.publicId,
          width: 1280,
          height: 720,
          crop: "fill",
          effects: [{ opacity: 0 }],
        },
        {
          width: 1000,
          crop: "fit",
          text: {
            color: "white",
            fontFamily: "Merriweather",
            fontSize: 50,
            fontWeight: "bold",
            lineSpacing: 10,
            text: quoteJson.title,
          },
          position: {
            x: 50,
            y: 130,
            gravity: "south_west",
          },
        },
        {
          publicId: quoteJson.publicId,
          width: 1000,
          height: 2,

          effects: [
            {
              colorize: "100,co_white",
              opacity: 70,
            },
          ],
          position: {
            x: 50,
            y: 100,
            gravity: "south_west",
          },
        },
        {
          crop: "fit",
          width: 1000,
          text: {
            color: "white",
            fontFamily: "Lato",
            fontSize: 30,
            fontWeight: "bold",
            text: `${quoteJson.author} (${quoteJson.movie_en})`,
          },
          position: {
            x: 50,
            y: 50,
            gravity: "south_west",
          },
        },
        {
          text: {
            color: "white",
            fontFamily: "Lato",
            fontSize: 23,
            fontWeight: "normal",
            text: "created with @spookards",
            letterSpacing: 0,
          },
          effects: [
            {
              colorize: "100,co_white",
              opacity: 50,
            },
          ],
          position: {
            x: 20,
            y: 20,
            gravity: "south_east",
          },
        },
      ],
    });

    photo.src = url;

    photo.onerror = (error) => {
      photo.style.opacity = "0";
      console.log("Error al generar la imagen", error);
      return error;
    };

    photo.onload = () => {
      loading.style.display = "none";

      photo.style.opacity = "1";
      photoOriginalBig.style.opacity = "0";
      postcardUrl = url;

      quoteJson.spookardsUrl = url;
      localStorage.setItem("quotes", JSON.stringify(quotes));
      lastestSpookards();
    };
  }

  const urlOriginal = getCldOgImageUrl({
    src: quoteJson.publicId,
  });

  photoOriginal.src = urlOriginal;

  photoOriginal.onload = () => {
    photoOriginal.style.opacity = "1";
  };

  photoOriginalBig.src = urlOriginal;

  photoOriginalBig.onload = () => {
    photoOriginalBig.style.opacity = ".3";
    setTimeout(() => {
      createPostcard();
    }, 1000);
  };

  const lastestSpookards = () => {
    if (quotes.length === 0) {
      return;
    }

    quotes.forEach((postcard: { spookardsUrl: string }) => {
      const card = document.createElement("div");
      card.className = "aspect-video w-52";
      const a = document.createElement("a");
      a.href = postcard.spookardsUrl;
      a.target = "_blank";

      const img = document.createElement("img");
      img.src = postcard.spookardsUrl;
      img.alt = "Postcard";

      a.appendChild(img);
      card.appendChild(a);
      latestsCards.appendChild(card);
    });
  };

  downloadBtn.addEventListener("click", () => {
    const a = document.createElement("a");
    const nameImage = quoteJson.publicId.split("/").pop();
    a.href = postcardUrl;
    a.download = `${nameImage}.avif`;
    a.target = "_blank";
    a.click();
  });
</script>
